plugins {
	id "net.serenity-bdd.serenity-gradle-plugin" version "3.3.0"
    id 'java'
    id 'eclipse'
    id 'idea'
}

defaultTasks 'clean','test','aggregate'
group 'com.finaktiva.cashmanagment'
version '1.0-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
	serenityVersion = "3.3.0"
	serenityRestVersion = "3.3.0"
	serenityCucumberVersion = "3.3.0"
	junitVersion = "5.8.2"
	assertJVersion = "3.22.0"
	slf4j = "1.7.30"
	lombok = "1.18.24"
}

dependencies {
	implementation group: 'net.serenity-bdd', name: 'serenity-core', version: "$rootProject.ext.serenityVersion"
	implementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: "$rootProject.ext.serenityVersion"
	implementation group: 'net.serenity-bdd', name: 'serenity-screenplay', version: "$rootProject.ext.serenityVersion"
	implementation group: 'net.serenity-bdd', name: 'serenity-screenplay-webdriver', version: "3.6.15"
	implementation group: 'net.serenity-bdd', name: 'serenity-screenplay-rest', version: "$rootProject.ext.serenityVersion"
	implementation group: 'net.serenity-bdd', name: 'serenity-cucumber', version: "$rootProject.ext.serenityCucumberVersion"
	implementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: "$rootProject.ext.serenityRestVersion"

	//necesario para rest assured
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.13.3'
	//necesario para generar reporte despues de ejecuccion
	compileOnly group: 'net.serenity-bdd', name: 'serenity-gradle-plugin', version: '1.8.21'
	//necesario para validar esquema de respuesta
    implementation group: 'io.rest-assured', name: 'json-schema-validator', version: '3.1.0'
    //necesario para leer archivo excel
	implementation group: 'com.codoid.products', name: 'fillo', version: '1.18'
	//necesario para conectar a Firebase QA
	//compile 'com.google.firebase:firebase-admin:1.32.0'
	// https://mvnrepository.com/artifact/net.serenity-bdd/serenity-screenplay-rest
	implementation group: 'net.serenity-bdd', name: 'serenity-screenplay-rest', version: '3.6.12'
	// https://mvnrepository.com/artifact/net.objecthunter/exp4j
implementation group: 'net.objecthunter', name: 'exp4j', version: '0.4.8'
	
	
    


	implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "$rootProject.ext.junitVersion"
	implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "$rootProject.ext.junitVersion"
	implementation group: 'org.assertj', name: 'assertj-core', version: "$rootProject.ext.assertJVersion"
	
	implementation group: 'org.slf4j', name: 'slf4j-simple', version: "$rootProject.ext.slf4j"
	
	compileOnly group: 'org.projectlombok', name: 'lombok', version: "$rootProject.ext.lombok"
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "$rootProject.ext.lombok"
}


test {
	useJUnitPlatform()
	
	systemProperties System.getProperties()
	systemProperty "file.encoding", "UTF-8"
	systemProperty "feature.file.encoding", "UTF-8"
	systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
	
    testLogging.showStandardStreams = true
    finalizedBy(aggregate)
}

wrapper {
    gradleVersion = "7.0.2"
}

serenity {
    testRoot = "com.finaktiva.cashmanagement"
    requirementsDir = "com.finaktiva.cashmanagment.features"
}

/*tasks.withType(Test){
    systemProperties = System.properties
    maxParallelForks = Runtime.runtime.availableProcessors()
}*/